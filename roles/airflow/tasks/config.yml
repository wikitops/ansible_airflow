---

- name: AIRFLOW CONFIG | Check if configuration file exists
  stat:
    path: /etc/airflow/airflow.cfg
  register: airflow_config
  changed_when: False

- name: AIRFLOW CONFIG | Create Airflow directories structure
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"
  with_items:
    - "{{ airflow_logs_folder }}"
    - "{{ airflow_child_process_log_folder }}"
    - "{{ airflow_dags_folder }}"
    - "{{ airflow_plugins_folder }}"

- name: AIRFLOW CONFIG | Configure logrotate
  template:
    src: "etc/logrotate.d/airflow-{{ item }}.j2"
    dest: "/etc/logrotate.d/airflow-{{Â item }}"
    mode: 0644
    owner: root
    group: root
  with_items:
    - "webserver"
    - "scheduler"

- name: AIRFLOW CONFIG | Deploy Airflow config file
  template:
    src: "etc/airflow/airflow.cfg.j2"
    dest: "{{ airflow_home }}/airflow.cfg"
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"
    mode: 0640
  notify: Restart {{ item }}
  with_items: "{{ airflow_services }}"

- name: AIRFLOW CONFIG | Deploy environment file
  template:
    src: "etc/default/airflow.j2"
    dest: "/etc/default/airflow"
    mode: 0644
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"

- name: AIRFLOW CONFIG | Initialize Airflow database
  command: /usr/local/bin/airflow initdb
  become: true
  become_user: "{{ airflow_user }}"
  when: not airflow_config.stat.exists and postgres_init_db

- name: AIRFLOW CONFIG | Upgrade Airflow database
  command: /usr/local/bin/airflow upgradedb
  become: true
  become_user: "{{ airflow_user }}"
  when: airflow_config.stat.exists
